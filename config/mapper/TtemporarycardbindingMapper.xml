<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.slark.pengder.mybatis.dao.TtemporarycardbindingMapper" >
  <resultMap id="BaseResultMap" type="com.slark.pengder.mybatis.model.Ttemporarycardbinding" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="CardNumberID" property="cardnumberid" jdbcType="INTEGER" />
    <result column="UserID" property="userid" jdbcType="INTEGER" />
    <result column="StartTime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="EndTime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="CreatedTime" property="createdtime" jdbcType="TIMESTAMP" />
    <result column="Operator" property="operator" jdbcType="INTEGER" />
    <result column="InstrumentID" property="instrumentid" jdbcType="INTEGER" />
    <result column="ApplySynTick" property="applysyntick" jdbcType="INTEGER" />
    <result column="ReceiveSynTick" property="receivesyntick" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, CardNumberID, UserID, StartTime, EndTime, CreatedTime, Operator, InstrumentID, 
    ApplySynTick, ReceiveSynTick
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.slark.pengder.mybatis.model.TtemporarycardbindingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from ttemporarycardbinding
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectNewByExample" resultMap="BaseResultMap" parameterType="com.slark.pengder.mybatis.model.TtemporarycardbindingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from ttemporarycardbinding
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
      and ApplySynTick>=ReceiveSynTick 
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectNewDisId" resultMap="BaseResultMap">
    select distinct InstrumentID from ttemporarycardbinding where ApplySynTick>=ReceiveSynTick
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ttemporarycardbinding
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ttemporarycardbinding
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.slark.pengder.mybatis.model.Ttemporarycardbinding" >
    insert into ttemporarycardbinding (ID, CardNumberID, UserID, 
      StartTime, EndTime, CreatedTime, 
      Operator, InstrumentID, ApplySynTick, 
      ReceiveSynTick)
    values (#{id,jdbcType=INTEGER}, #{cardnumberid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{createdtime,jdbcType=TIMESTAMP}, 
      #{operator,jdbcType=INTEGER}, #{instrumentid,jdbcType=INTEGER}, #{applysyntick,jdbcType=INTEGER}, 
      #{receivesyntick,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.slark.pengder.mybatis.model.Ttemporarycardbinding" >
    insert into ttemporarycardbinding
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="cardnumberid != null" >
        CardNumberID,
      </if>
      <if test="userid != null" >
        UserID,
      </if>
      <if test="starttime != null" >
        StartTime,
      </if>
      <if test="endtime != null" >
        EndTime,
      </if>
      <if test="createdtime != null" >
        CreatedTime,
      </if>
      <if test="operator != null" >
        Operator,
      </if>
      <if test="instrumentid != null" >
        InstrumentID,
      </if>
      <if test="applysyntick != null" >
        ApplySynTick,
      </if>
      <if test="receivesyntick != null" >
        ReceiveSynTick,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cardnumberid != null" >
        #{cardnumberid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=INTEGER},
      </if>
      <if test="instrumentid != null" >
        #{instrumentid,jdbcType=INTEGER},
      </if>
      <if test="applysyntick != null" >
        #{applysyntick,jdbcType=INTEGER},
      </if>
      <if test="receivesyntick != null" >
        #{receivesyntick,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.slark.pengder.mybatis.model.TtemporarycardbindingExample" resultType="java.lang.Integer" >
    select count(*) from ttemporarycardbinding
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.slark.pengder.mybatis.model.Ttemporarycardbinding" >
    update ttemporarycardbinding
    <set >
      <if test="cardnumberid != null" >
        CardNumberID = #{cardnumberid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        UserID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        StartTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        EndTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdtime != null" >
        CreatedTime = #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        Operator = #{operator,jdbcType=INTEGER},
      </if>
      <if test="instrumentid != null" >
        InstrumentID = #{instrumentid,jdbcType=INTEGER},
      </if>
      <if test="applysyntick != null" >
        ApplySynTick = #{applysyntick,jdbcType=INTEGER},
      </if>
      <if test="receivesyntick != null" >
        ReceiveSynTick = #{receivesyntick,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.slark.pengder.mybatis.model.Ttemporarycardbinding" >
    update ttemporarycardbinding
    set CardNumberID = #{cardnumberid,jdbcType=INTEGER},
      UserID = #{userid,jdbcType=INTEGER},
      StartTime = #{starttime,jdbcType=TIMESTAMP},
      EndTime = #{endtime,jdbcType=TIMESTAMP},
      CreatedTime = #{createdtime,jdbcType=TIMESTAMP},
      Operator = #{operator,jdbcType=INTEGER},
      InstrumentID = #{instrumentid,jdbcType=INTEGER},
      ApplySynTick = #{applysyntick,jdbcType=INTEGER},
      ReceiveSynTick = #{receivesyntick,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByEndtime" >
    <![CDATA[update ttemporarycardbinding set ReceiveSynTick=UNIX_TIMESTAMP() where (EndTime<NOW())]]>
  </update>
</mapper>