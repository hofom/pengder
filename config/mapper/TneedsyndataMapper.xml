<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.slark.pengder.mybatis.dao.TneedsyndataMapper" >
  <resultMap id="BaseResultMap" type="com.slark.pengder.mybatis.model.Tneedsyndata" >
    <id column="TargetInstrumentID" property="targetinstrumentid" jdbcType="INTEGER" />
    <id column="NeedSynDataID" property="needsyndataid" jdbcType="INTEGER" />
    <id column="NeedSynDataType" property="needsyndatatype" jdbcType="SMALLINT" />
    <result column="ReceiveSynTick" property="receivesyntick" jdbcType="INTEGER" />
    <result column="ApplySynTick" property="applysyntick" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TargetInstrumentID, NeedSynDataID, NeedSynDataType, ReceiveSynTick, ApplySynTick
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.slark.pengder.mybatis.model.TneedsyndataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tneedsyndata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectNewByExample" resultMap="BaseResultMap" parameterType="com.slark.pengder.mybatis.model.TneedsyndataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tneedsyndata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
      and ApplySynTick>=ReceiveSynTick 
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.slark.pengder.mybatis.model.TneedsyndataKey" >
    select 
    <include refid="Base_Column_List" />
    from tneedsyndata
    where TargetInstrumentID = #{targetinstrumentid,jdbcType=INTEGER}
      and NeedSynDataID = #{needsyndataid,jdbcType=INTEGER}
      and NeedSynDataType = #{needsyndatatype,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.slark.pengder.mybatis.model.TneedsyndataKey" >
    delete from tneedsyndata
    where TargetInstrumentID = #{targetinstrumentid,jdbcType=INTEGER}
      and NeedSynDataID = #{needsyndataid,jdbcType=INTEGER}
      and NeedSynDataType = #{needsyndatatype,jdbcType=SMALLINT}
  </delete>
  <insert id="insert" parameterType="com.slark.pengder.mybatis.model.Tneedsyndata" >
    insert into tneedsyndata (TargetInstrumentID, NeedSynDataID, 
      NeedSynDataType, ReceiveSynTick, ApplySynTick
      )
    values (#{targetinstrumentid,jdbcType=INTEGER}, #{needsyndataid,jdbcType=INTEGER}, 
      #{needsyndatatype,jdbcType=SMALLINT}, #{receivesyntick,jdbcType=INTEGER}, #{applysyntick,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.slark.pengder.mybatis.model.Tneedsyndata" >
    insert into tneedsyndata
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="targetinstrumentid != null" >
        TargetInstrumentID,
      </if>
      <if test="needsyndataid != null" >
        NeedSynDataID,
      </if>
      <if test="needsyndatatype != null" >
        NeedSynDataType,
      </if>
      <if test="receivesyntick != null" >
        ReceiveSynTick,
      </if>
      <if test="applysyntick != null" >
        ApplySynTick,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="targetinstrumentid != null" >
        #{targetinstrumentid,jdbcType=INTEGER},
      </if>
      <if test="needsyndataid != null" >
        #{needsyndataid,jdbcType=INTEGER},
      </if>
      <if test="needsyndatatype != null" >
        #{needsyndatatype,jdbcType=SMALLINT},
      </if>
      <if test="receivesyntick != null" >
        #{receivesyntick,jdbcType=INTEGER},
      </if>
      <if test="applysyntick != null" >
        #{applysyntick,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.slark.pengder.mybatis.model.TneedsyndataExample" resultType="java.lang.Integer" >
    select count(*) from tneedsyndata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.slark.pengder.mybatis.model.Tneedsyndata" >
    update tneedsyndata
    <set >
      <if test="receivesyntick != null" >
        ReceiveSynTick = #{receivesyntick,jdbcType=INTEGER},
      </if>
      <if test="applysyntick != null" >
        ApplySynTick = #{applysyntick,jdbcType=INTEGER},
      </if>
    </set>
    where TargetInstrumentID = #{targetinstrumentid,jdbcType=INTEGER}
      and NeedSynDataID = #{needsyndataid,jdbcType=INTEGER}
      and NeedSynDataType = #{needsyndatatype,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.slark.pengder.mybatis.model.Tneedsyndata" >
    update tneedsyndata
    set ReceiveSynTick = #{receivesyntick,jdbcType=INTEGER},
      ApplySynTick = #{applysyntick,jdbcType=INTEGER}
    where TargetInstrumentID = #{targetinstrumentid,jdbcType=INTEGER}
      and NeedSynDataID = #{needsyndataid,jdbcType=INTEGER}
      and NeedSynDataType = #{needsyndatatype,jdbcType=SMALLINT}
  </update>
</mapper>