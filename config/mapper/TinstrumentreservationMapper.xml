<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.slark.pengder.mybatis.dao.TinstrumentreservationMapper" >
  <resultMap id="BaseResultMap" type="com.slark.pengder.mybatis.model.Tinstrumentreservation" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="InstrumentID" property="instrumentid" jdbcType="INTEGER" />
    <result column="GroupID" property="groupid" jdbcType="INTEGER" />
    <result column="DayOfWeek" property="dayofweek" jdbcType="TINYINT" />
    <result column="ProjectName" property="projectname" jdbcType="VARCHAR" />
    <result column="Reason" property="reason" jdbcType="VARCHAR" />
    <result column="StartTime" property="starttime" jdbcType="TIME" />
    <result column="EndTime" property="endtime" jdbcType="TIME" />
    <result column="ActiveTime" property="activetime" jdbcType="TIMESTAMP" />
    <result column="ExpireTime" property="expiretime" jdbcType="TIMESTAMP" />
    <result column="CreatedID" property="createdid" jdbcType="INTEGER" />
    <result column="CreatedTime" property="createdtime" jdbcType="TIMESTAMP" />
    <result column="ModifiedID" property="modifiedid" jdbcType="INTEGER" />
    <result column="ModifiedTime" property="modifiedtime" jdbcType="TIMESTAMP" />
    <result column="DeletedID" property="deletedid" jdbcType="INTEGER" />
    <result column="DeletedTime" property="deletedtime" jdbcType="TIMESTAMP" />
    <result column="ReceiveSynTick" property="receivesyntick" jdbcType="INTEGER" />
    <result column="ApplySynTick" property="applysyntick" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, InstrumentID, GroupID, DayOfWeek, ProjectName, Reason, StartTime, EndTime, ActiveTime, 
    ExpireTime, CreatedID, CreatedTime, ModifiedID, ModifiedTime, DeletedID, DeletedTime, 
    ReceiveSynTick, ApplySynTick
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.slark.pengder.mybatis.model.TinstrumentreservationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tinstrumentreservation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectNewByExample" resultMap="BaseResultMap" parameterType="com.slark.pengder.mybatis.model.TinstrumentreservationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tinstrumentreservation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
      and ApplySynTick>=ReceiveSynTick 
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tinstrumentreservation
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tinstrumentreservation
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.slark.pengder.mybatis.model.Tinstrumentreservation" >
    insert into tinstrumentreservation (ID, InstrumentID, GroupID, 
      DayOfWeek, ProjectName, Reason, 
      StartTime, EndTime, ActiveTime, 
      ExpireTime, CreatedID, CreatedTime, 
      ModifiedID, ModifiedTime, DeletedID, 
      DeletedTime, ReceiveSynTick, ApplySynTick
      )
    values (#{id,jdbcType=INTEGER}, #{instrumentid,jdbcType=INTEGER}, #{groupid,jdbcType=INTEGER}, 
      #{dayofweek,jdbcType=TINYINT}, #{projectname,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{starttime,jdbcType=TIME}, #{endtime,jdbcType=TIME}, #{activetime,jdbcType=TIMESTAMP}, 
      #{expiretime,jdbcType=TIMESTAMP}, #{createdid,jdbcType=INTEGER}, #{createdtime,jdbcType=TIMESTAMP}, 
      #{modifiedid,jdbcType=INTEGER}, #{modifiedtime,jdbcType=TIMESTAMP}, #{deletedid,jdbcType=INTEGER}, 
      #{deletedtime,jdbcType=TIMESTAMP}, #{receivesyntick,jdbcType=INTEGER}, #{applysyntick,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.slark.pengder.mybatis.model.Tinstrumentreservation" >
    insert into tinstrumentreservation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="instrumentid != null" >
        InstrumentID,
      </if>
      <if test="groupid != null" >
        GroupID,
      </if>
      <if test="dayofweek != null" >
        DayOfWeek,
      </if>
      <if test="projectname != null" >
        ProjectName,
      </if>
      <if test="reason != null" >
        Reason,
      </if>
      <if test="starttime != null" >
        StartTime,
      </if>
      <if test="endtime != null" >
        EndTime,
      </if>
      <if test="activetime != null" >
        ActiveTime,
      </if>
      <if test="expiretime != null" >
        ExpireTime,
      </if>
      <if test="createdid != null" >
        CreatedID,
      </if>
      <if test="createdtime != null" >
        CreatedTime,
      </if>
      <if test="modifiedid != null" >
        ModifiedID,
      </if>
      <if test="modifiedtime != null" >
        ModifiedTime,
      </if>
      <if test="deletedid != null" >
        DeletedID,
      </if>
      <if test="deletedtime != null" >
        DeletedTime,
      </if>
      <if test="receivesyntick != null" >
        ReceiveSynTick,
      </if>
      <if test="applysyntick != null" >
        ApplySynTick,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="instrumentid != null" >
        #{instrumentid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null" >
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="dayofweek != null" >
        #{dayofweek,jdbcType=TINYINT},
      </if>
      <if test="projectname != null" >
        #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIME},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIME},
      </if>
      <if test="activetime != null" >
        #{activetime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiretime != null" >
        #{expiretime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdid != null" >
        #{createdid,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedid != null" >
        #{modifiedid,jdbcType=INTEGER},
      </if>
      <if test="modifiedtime != null" >
        #{modifiedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedid != null" >
        #{deletedid,jdbcType=INTEGER},
      </if>
      <if test="deletedtime != null" >
        #{deletedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivesyntick != null" >
        #{receivesyntick,jdbcType=INTEGER},
      </if>
      <if test="applysyntick != null" >
        #{applysyntick,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.slark.pengder.mybatis.model.TinstrumentreservationExample" resultType="java.lang.Integer" >
    select count(*) from tinstrumentreservation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.slark.pengder.mybatis.model.Tinstrumentreservation" >
    update tinstrumentreservation
    <set >
      <if test="instrumentid != null" >
        InstrumentID = #{instrumentid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null" >
        GroupID = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="dayofweek != null" >
        DayOfWeek = #{dayofweek,jdbcType=TINYINT},
      </if>
      <if test="projectname != null" >
        ProjectName = #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        Reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        StartTime = #{starttime,jdbcType=TIME},
      </if>
      <if test="endtime != null" >
        EndTime = #{endtime,jdbcType=TIME},
      </if>
      <if test="activetime != null" >
        ActiveTime = #{activetime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiretime != null" >
        ExpireTime = #{expiretime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdid != null" >
        CreatedID = #{createdid,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        CreatedTime = #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedid != null" >
        ModifiedID = #{modifiedid,jdbcType=INTEGER},
      </if>
      <if test="modifiedtime != null" >
        ModifiedTime = #{modifiedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedid != null" >
        DeletedID = #{deletedid,jdbcType=INTEGER},
      </if>
      <if test="deletedtime != null" >
        DeletedTime = #{deletedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivesyntick != null" >
        ReceiveSynTick = #{receivesyntick,jdbcType=INTEGER},
      </if>
      <if test="applysyntick != null" >
        ApplySynTick = #{applysyntick,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.slark.pengder.mybatis.model.Tinstrumentreservation" >
    update tinstrumentreservation
    set InstrumentID = #{instrumentid,jdbcType=INTEGER},
      GroupID = #{groupid,jdbcType=INTEGER},
      DayOfWeek = #{dayofweek,jdbcType=TINYINT},
      ProjectName = #{projectname,jdbcType=VARCHAR},
      Reason = #{reason,jdbcType=VARCHAR},
      StartTime = #{starttime,jdbcType=TIME},
      EndTime = #{endtime,jdbcType=TIME},
      ActiveTime = #{activetime,jdbcType=TIMESTAMP},
      ExpireTime = #{expiretime,jdbcType=TIMESTAMP},
      CreatedID = #{createdid,jdbcType=INTEGER},
      CreatedTime = #{createdtime,jdbcType=TIMESTAMP},
      ModifiedID = #{modifiedid,jdbcType=INTEGER},
      ModifiedTime = #{modifiedtime,jdbcType=TIMESTAMP},
      DeletedID = #{deletedid,jdbcType=INTEGER},
      DeletedTime = #{deletedtime,jdbcType=TIMESTAMP},
      ReceiveSynTick = #{receivesyntick,jdbcType=INTEGER},
      ApplySynTick = #{applysyntick,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>